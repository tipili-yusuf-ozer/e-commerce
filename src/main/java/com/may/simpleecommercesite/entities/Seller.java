package com.may.simpleecommercesite.entities;

import com.may.simpleecommercesite.annotations.*;
import com.may.simpleecommercesite.entities.embedded.Address;

import java.io.Serializable;
import java.util.List;

@Entity
public class Seller implements Serializable {
    @Id
    @AutoGenerated
            @Column(name = "sellerId")
     int id;
     String name;
     Address address;

    public List<Coupon> getCoupons() {
        return coupons;
    }

    public void setCoupons(List<Coupon> coupons) {
        this.coupons = coupons;
    }

    @OneToMany(inverseJoinColumn = "sellerId")
     private List<Coupon> coupons;
    // Constructor for required fields
    public Seller(int id) {
        this.id = id;
    }
    public Seller() {
    }
    // Constructors for combinations of fields that don't have  annotation


    // Getters and setters (including dirty flags)

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    // Equals and hashCode methods

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || !getClass().isAssignableFrom(o.getClass())) return false;

        Seller seller = (Seller) o;

        return getId()==seller.getId();
    }

    @Override
    public int hashCode() {
        return Integer.hashCode(id);
    }
}
