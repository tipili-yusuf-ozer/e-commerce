package com.may.simpleecommercesite.entities;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.may.simpleecommercesite.annotations.*;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

@Entity
public class Product implements Serializable {
    @Id
    @Column(name = "productId")
    @AutoGenerated
     private int id;
    @JsonIgnore
    @OneToMany(inverseJoinColumn = "productId")
     private List<Image> images;
    private Date dateAdded;
    private String title;
     private String description;
     private BigDecimal originalPrice;
     private int discount;
     private BigDecimal avgRating;
     private int ratingCount;
     @OneToOne(joinColumn = "sellerId")
     @JsonFilter("depth_1")
    private Seller seller;
    @ManyToOne(joinColumn = "brandId")
     private Brand brand;
     @JsonFilter("depth_1")
    @ManyToOne(joinColumn = "categoryId")
     private Category category;
     @JsonIgnore
     @JsonFilter("depth_1")
     @OneToMany(inverseJoinColumn = "productId")
     private List<Rating> ratings;
    private    BigDecimal finalPrice;
     private int saleCount;
    // Empty constructor
    public Product() {
    }

    public Product(int id){
        this.id = id;
    }
    // Constructor for required fields
    public Product(int id, String title, BigDecimal originalPrice, BigDecimal avgRating, BigDecimal finalPrice) {
        this.id = id;
        this.title = title;
        this.originalPrice = originalPrice;
        this.avgRating = avgRating;
        this.finalPrice = finalPrice;
    }
    public Date getDateAdded() {
        return dateAdded;
    }
    public Brand getBrand() {
        return brand;
    }

    public void setBrand(Brand brand) {
        this.brand = brand;
    }

    public void setDateAdded(Date dateAdded) {
        this.dateAdded = dateAdded;
    }
    public int getId() {
        return id;
    }
    public void setId(int id) {
        this.id = id;
    }

    public List<Image> getImages() {
        return images;
    }
    public int getRatingCount() {return ratingCount;}
    public void setRatingCount(int ratingCount) {this.ratingCount = ratingCount;}
    public void setImages(List<Image> image) {
        this.images = image;
    }
    public List<Rating> getRatings(){
        return this.ratings;
    }
    public void setRatings(List<Rating> ratings){
        this.ratings=ratings;
    }
    public String getTitle() {
        return title;
    }
    public void setTitle( String title) {
        this.title = title;
    }
    public String getDescription() {
        return description;
    }
    public void setDescription(String description) {
        this.description = description;
    }
    public Category getCategory() {
        return category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }
    public BigDecimal getOriginalPrice() {
        return originalPrice;
    }

    public void setOriginalPrice(BigDecimal originalPrice) {
        this.originalPrice = originalPrice;
    }

    public int getDiscount() {
        return discount;
    }

    public void setDiscount(int discount) {
        this.discount = discount;
    }

    
    public BigDecimal getAvgRating() {
        return avgRating;
    }

    public void setAvgRating( BigDecimal avgRating) {
        this.avgRating = avgRating;
    }

    public Seller getSeller() {
        return seller;
    }

    public void setSeller(Seller seller) {
        this.seller = seller;
    }

    
    public BigDecimal getFinalPrice() {
        return finalPrice;
    }

    public void setFinalPrice(BigDecimal finalPrice) {
        this.finalPrice = finalPrice;
    }

    public int getSaleCount() {
        return saleCount;
    }

    public void setSaleCount(int saleCount) {
        this.saleCount = saleCount;
    }

    // Equals and hashCode methods

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || !getClass().isAssignableFrom(o.getClass())) return false;

        Product product = (Product) o;

        return getId() == product.getId();
    }

    @Override
    public int hashCode() {
        return Integer.hashCode(id);
    }
}
